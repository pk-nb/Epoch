{div, p, a, button, img, span} = React.DOM

UserNameMixin =
  user: ->
    if @props.user
      div className: 'shelf-user',
        p { onClick: @props.handleClick(@props.panelIds.user), className: 'dropdown-link' },
          img {className: 'avatar', src: @props.user.picture},
          span null,
            @props.user.name
    else
      p { onClick: @props.handleClick(@props.panelIds.user), className: 'dropdown-link' },
        'Login'

TimelineTitleMixin =
  # TODO Truncate more than three titles if large set of timelines
  timelineTitle: ->
    if @props.timelines.length > 0
      @props.timelines.reduce (prev, timeline) =>
        prev + timeline.title + ', '
      , ''
    else
      'Select Timelines'


DefaultTopShelf = React.createClass
  displayName: 'DefaultTopShelf'
  mixins: [UserNameMixin, TimelineTitleMixin]

  render: ->
    div className: 'shelf',
      div className: 'left',
        p className: 'logo',
          'Epoch'
      div className: 'center',
        p { onClick: @props.handleClick(@props.panelIds.timeline), className: 'dropdown-link'},
          @timelineTitle()
      div className: 'right',
        @user()


UserShelf = React.createClass
  displayName: 'UserShelf'
  mixins: [UserNameMixin]

  render: ->
    div className: 'shelf',
      div className: 'left',
        ''
      div className: 'center',
        p null,
          if @props.user then 'User Profile' else 'Login'
      div className: 'right',
        img {onClick: @props.handleClick(), className: 'shelf-icon', src: '<%= asset_path 'x-icon.svg' %>'}


TimelineShelf = React.createClass
  displayName: 'TimelineShelf'

  render: ->
    div className: 'shelf',
      div className: 'left',
        img {onClick: @props.handleClick(), className: 'shelf-icon', src: '<%= asset_path 'x-icon.svg' %>'}
      div className: 'center',
        p { onClick: @props.handleClick(), className: 'dropdown-link'},
          'Select Timelines'
      div className: 'right',
        ''


DefaultBottomShelf = React.createClass
  displayName: 'DefaultBottomShelf'

  render: ->
    div className: 'shelf',
      div className: 'left',
        p { onClick: @props.handleClick(@props.panelIds.event), className: 'dropdown-link'},
          'Event Name'
      div className: 'center',
        p { onClick: @props.handleClick(), className: 'dropdown-link'},
          '1999'
      div className: 'right',
        p { onClick: @props.handleClick(@props.panelIds.newEvent), className: 'dropdown-link' },
          img {className: 'shelf-icon', src: '<%= asset_path 'plus-icon.svg' %>'}

NewEventShelf = React.createClass
  displayName: 'NewEventShelf'

  render: ->
    div className: 'shelf',
      div className: 'left',
        ''
      div className: 'center',
        p null,
          'New Event'
      div className: 'right',
        img {onClick: @props.handleClick(), className: 'shelf-icon', src: '<%= asset_path 'x-icon.svg' %>'}

EventShelf = React.createClass
  displayName: 'EventShelf'

  render: ->
    selectedEvent = @props.selectedEvent
    div className: 'shelf',
        div className: 'left',
            ''
        div className: 'center',
            p null,
              selectedEvent.title
        div className: 'right',
            img {onClick: @props.handleClick(), className: 'shelf-icon', src: '<%= asset_path 'x-icon.svg' %>'}



@.EpochUI ?= {}
@.EpochUI.DefaultTopShelf = DefaultTopShelf
@.EpochUI.UserShelf = UserShelf
@.EpochUI.TimelineShelf = TimelineShelf

@.EpochUI.DefaultBottomShelf = DefaultBottomShelf
@.EpochUI.NewEventShelf = NewEventShelf
@.EpochUI.EventShelf = EventShelf
